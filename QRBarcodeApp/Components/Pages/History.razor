@page "/history"

@inject LocalStorageService LocalStorageService
@inject IJSRuntime JSRuntime

<TabHeader Name="History" HandleInput="HandleInput" InputPlaceholder="Search History" />

<div class="main-content grid gap-2 w-[90vw]">
    @if (_QRListFiltered?.Any() == true)
    {
        @foreach (QRModel QR in _QRListFiltered)
        {
            <QRRectangle QR="@QR" />
        }
    }
    else
    {
        <h1 class="mt-20 text-3xl font-bold">History is Empty</h1>
    }
</div>

@code {
    private List<QRModel>? _QRList;
    private List<QRModel>? _QRListFiltered;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await JSRuntime.InvokeVoidAsync("adjustContentMargin");
    }

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        await base.SetParametersAsync(parameters);

        await LocalStorageService.SaveActiveTabAsync("/history");
        _QRList = await LocalStorageService.GetQRAllAsync();
        _QRListFiltered = _QRList;
        StateHasChanged();
    }

    private void HandleInput(ChangeEventArgs e)
    {
        string? searchInput = e.Value?.ToString();

        if (!string.IsNullOrWhiteSpace(searchInput) && _QRList?.Any() == true)
            _QRListFiltered = _QRList.Where(qr => qr?.Value is not null && qr.Value.Contains(searchInput, StringComparison.OrdinalIgnoreCase)).ToList();
        else
            _QRListFiltered = _QRList;
    }
}
