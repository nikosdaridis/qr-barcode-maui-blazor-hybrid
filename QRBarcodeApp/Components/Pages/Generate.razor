@page "/generate"

@inject NavigationManager NavigationManager
@inject LocalStorageService LocalStorageService
@inject IJSRuntime JSRuntime

<TabHeader Name="Generate" />

<div class="main-content grid w-[90vw] gap-2">
    <h1 class="text-xl">QR</h1>

    @foreach (string type in new[] { "Text", "Url", "Email", "WiFi", "GeographicCoordinates", "ContactInfo", "CalendarEvent", "Phone", "Sms" })
    {
        <GenerateRectangle IconPath=@($"icons/generate/{type.ToLower()}.svg")
                           Text=@(type != "WiFi" ? Regex.Replace(type, "(\\B[A-Z])", " $1") : type)
                           HandleClick="@(() => NavigationManager.NavigateTo($"/generate/{type}/QRCode"))" />
    }

    <h1 class="mt-4 text-xl">Barcode</h1>

    @foreach (string format in new[] { "Code128", "Code39", "Code93", "CodaBar", "Ean13", "Ean8", "Upca", "Upce", "I2OF5" })
    {
        <GenerateRectangle IconPath="icons/generate/barcode.svg"
                           Text=@format
                           HandleClick="@(() => NavigationManager.NavigateTo($"/generate/Text/{format}"))" />
    }
</div>

<TabBar />

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await JSRuntime.InvokeVoidAsync("adjustContentMargin");
    }

    protected override async Task OnInitializedAsync()
    {
        await LocalStorageService.SaveActiveTabAsync("/generate");
    }
}
