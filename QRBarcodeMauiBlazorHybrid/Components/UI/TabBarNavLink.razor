@if (TabName == "scan")
{
    <div class="tab-bar-nav-link flex flex-1 items-center justify-center" @onclick=ShowCameraScannerPopupAsync>
        <img class="h-[30px] w-[30px]" src="icons/scan.svg" />
    </div>
}
else
{
    <NavLink class="tab-bar-nav-link flex flex-1 items-center justify-center" href=@($"/{TabName}")>
        <img class="@(string.IsNullOrWhiteSpace(_activeTab) || !_activeTab.Contains(TabName!) ? string.Empty : "active") h-[30px] w-[30px] transition duration-300 ease-in-out"
             src=@($"icons/{TabName}{(string.IsNullOrWhiteSpace(_activeTab) || !_activeTab.Contains(TabName!) ? string.Empty : "-active")}.svg") />
    </NavLink>
}

@code {
    [Parameter]
    public NavigationManager? NavigationManager { get; set; }

    [Parameter]
    public LocalStorageService? LocalStorageService { get; set; }

    [Parameter]
    public string? TabName { get; set; }

    private string? _activeTab;
    private bool _isPopupShown;

    /// <summary>
    /// Sets component parameters and active tab from URL
    /// </summary>
    public override async Task SetParametersAsync(ParameterView parameters)
    {
        await base.SetParametersAsync(parameters);

        _activeTab = NavigationManager?.ToBaseRelativePath(NavigationManager.Uri).Split('/').FirstOrDefault();
    }

    /// <summary>
    /// Displays camera scanner popup
    /// </summary>
    private async Task ShowCameraScannerPopupAsync()
    {
        if (_isPopupShown || NavigationManager is null || LocalStorageService is null)
            return;

        _isPopupShown = true;

        try
        {
            await App.Current!.MainPage!.ShowPopupAsync(new CameraScanner(NavigationManager, LocalStorageService));
        }
        finally
        {
            _isPopupShown = false;
        }
    }
}
